{"version":3,"sources":["Components/Card/Card.jsx","Components/CardList/CardList.jsx","Components/SearchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","Card_Card_Card","key","SearchBox","_ref","placeholder","onChange","type","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","monsterSearchHandler","event","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","SearchBox_SearchBox_SearchBox","CardList_CardList_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"mTAIaA,SAAO,SAACC,GACnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BACtBR,EAAAC,EAAAC,cAAA,UAAKH,EAAMQ,QAAQE,MACnBT,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,QAAQG,UCJXC,SAAW,SAACZ,GACvB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,EAAMa,SAASC,IAAI,SAACN,GAAD,OAC7CP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,SCHzBS,SAAY,SAAAC,GAA6B,IAA3BC,EAA2BD,EAA3BC,YAAaC,EAAcF,EAAdE,SACtC,OAAOnB,EAAAC,EAAAC,cAAA,SACLC,UAAU,SACViB,KAAK,OACLF,YAAaA,EACbC,SAAUA,MCgCCE,qBAnCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QASFI,qBAAuB,SAACC,GACtBR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAR1CZ,EAAKa,MAAQ,CACXvB,SAAU,GACVoB,YAAa,IALHV,mFAcM,IAAAc,EAAAX,KAClBY,MAAM,8CACHC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAAD,OAAWL,EAAKL,SAAS,CAAEnB,SAAU6B,uCAGtC,IAAAC,EAC2BjB,KAAKU,MAA/BvB,EADD8B,EACC9B,SAAUoB,EADXU,EACWV,YACZW,EAAmB/B,EAASgC,OAAO,SAACrC,GAAD,OACvCA,EAAQE,KAAKoC,cAAcC,SAASd,EAAYa,iBAElD,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC6C,EAAD,CAAW7B,YAAY,kBAAkBC,SAAUM,KAAKI,uBACxD7B,EAAAC,EAAAC,cAAC8C,EAAD,CAAUpC,SAAU+B,YA9BVM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAhB,KAAAe,EAAAE,KAAA,UAAqBjB,KAAK,SAAArB,GAAiD,IAA9CuC,EAA8CvC,EAA9CuC,OAAQC,EAAsCxC,EAAtCwC,OAAQC,EAA8BzC,EAA9ByC,OAAQC,EAAsB1C,EAAtB0C,OAAQC,EAAc3C,EAAd2C,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDdU,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFC,SAASC,eAAe,SAM1BhB","file":"static/js/main.5f19ea82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './Card.css';\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Card } from \"../Card/Card\";\r\n\r\nimport './CardList.css';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">{props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}</div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport './SearchBox.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, onChange}) => {\r\n  return <input\r\n    className=\"search\"\r\n    type=\"text\"\r\n    placeholder={placeholder}\r\n    onChange={onChange}\r\n  />\r\n};   ","import React, { Component } from \"react\";\nimport { CardList } from \"./Components/CardList/CardList\";\nimport { SearchBox } from \"./Components/SearchBox/SearchBox\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    // this.monsterSearchHandler = this.monsterSearchHandler.bind(this)\n  }\n\n  monsterSearchHandler = (event) => {\n    this.setState({ searchField: event.target.value });\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"Search Monsters\" onChange={this.monsterSearchHandler}  />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}